#############################################################################
# Makefile for building: tp-Serveur
# Generated by qmake (2.01a) (Qt 4.8.0) on: Sun Jan 22 22:02:12 2012
# Project:  tp-Serveur.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile tp-Serveur.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include -I. -IHttp -ITcp_pull -ITcp_push -IUdp_pull -IUdp_push -IMulti -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		Http/client.cpp \
		Http/serveur.cpp \
		Multi/serveurMulti.cpp \
		Tcp_pull/demandetcppull.cpp \
		Tcp_pull/serveurtcppull.cpp \
		Tcp_push/clientTcpPush.cpp \
		Tcp_push/serveurTcpPush.cpp \
		Udp_pull/clientUdpPull.cpp \
		Udp_pull/serveurUdpPull.cpp \
		Udp_push/clientUdpPush.cpp \
		Udp_push/serveurUdpPush.cpp moc_client.cpp \
		moc_serveur.cpp \
		moc_serveurMulti.cpp \
		moc_demandetcppull.cpp \
		moc_serveurtcppull.cpp \
		moc_clientTcpPush.cpp \
		moc_serveurTcpPush.cpp \
		moc_clientUdpPull.cpp \
		moc_serveurUdpPull.cpp \
		moc_clientUdpPush.cpp \
		moc_serveurUdpPush.cpp
OBJECTS       = main.o \
		client.o \
		serveur.o \
		serveurMulti.o \
		demandetcppull.o \
		serveurtcppull.o \
		clientTcpPush.o \
		serveurTcpPush.o \
		clientUdpPull.o \
		serveurUdpPull.o \
		clientUdpPush.o \
		serveurUdpPush.o \
		moc_client.o \
		moc_serveur.o \
		moc_serveurMulti.o \
		moc_demandetcppull.o \
		moc_serveurtcppull.o \
		moc_clientTcpPush.o \
		moc_serveurTcpPush.o \
		moc_clientUdpPull.o \
		moc_serveurUdpPull.o \
		moc_clientUdpPush.o \
		moc_serveurUdpPush.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		tp-Serveur.pro
QMAKE_TARGET  = tp-Serveur
DESTDIR       = 
TARGET        = tp-Serveur

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: tp-Serveur.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile tp-Serveur.pro
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/common/gcc-base.conf:
/usr/share/qt/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt/mkspecs/common/g++-base.conf:
/usr/share/qt/mkspecs/common/g++-unix.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_phonon.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/debug.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile tp-Serveur.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/tp-Serveur1.0.0 || $(MKDIR) .tmp/tp-Serveur1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/tp-Serveur1.0.0/ && $(COPY_FILE) --parents Http/client.h Http/serveur.h Multi/serveurMulti.h Tcp_pull/demandetcppull.h Tcp_pull/serveurtcppull.h Tcp_push/clientTcpPush.h Tcp_push/serveurTcpPush.h Udp_pull/clientUdpPull.h Udp_pull/serveurUdpPull.h Udp_push/clientUdpPush.h Udp_push/serveurUdpPush.h .tmp/tp-Serveur1.0.0/ && $(COPY_FILE) --parents main.cpp Http/client.cpp Http/serveur.cpp Multi/serveurMulti.cpp Tcp_pull/demandetcppull.cpp Tcp_pull/serveurtcppull.cpp Tcp_push/clientTcpPush.cpp Tcp_push/serveurTcpPush.cpp Udp_pull/clientUdpPull.cpp Udp_pull/serveurUdpPull.cpp Udp_push/clientUdpPush.cpp Udp_push/serveurUdpPush.cpp .tmp/tp-Serveur1.0.0/ && (cd `dirname .tmp/tp-Serveur1.0.0` && $(TAR) tp-Serveur1.0.0.tar tp-Serveur1.0.0 && $(COMPRESS) tp-Serveur1.0.0.tar) && $(MOVE) `dirname .tmp/tp-Serveur1.0.0`/tp-Serveur1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/tp-Serveur1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_client.cpp moc_serveur.cpp moc_serveurMulti.cpp moc_demandetcppull.cpp moc_serveurtcppull.cpp moc_clientTcpPush.cpp moc_serveurTcpPush.cpp moc_clientUdpPull.cpp moc_serveurUdpPull.cpp moc_clientUdpPush.cpp moc_serveurUdpPush.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_client.cpp moc_serveur.cpp moc_serveurMulti.cpp moc_demandetcppull.cpp moc_serveurtcppull.cpp moc_clientTcpPush.cpp moc_serveurTcpPush.cpp moc_clientUdpPull.cpp moc_serveurUdpPull.cpp moc_clientUdpPush.cpp moc_serveurUdpPush.cpp
moc_client.cpp: Http/client.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Http/client.h -o moc_client.cpp

moc_serveur.cpp: Http/client.h \
		Http/serveur.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Http/serveur.h -o moc_serveur.cpp

moc_serveurMulti.cpp: Multi/serveurMulti.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Multi/serveurMulti.h -o moc_serveurMulti.cpp

moc_demandetcppull.cpp: Http/client.h \
		Tcp_pull/demandetcppull.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Tcp_pull/demandetcppull.h -o moc_demandetcppull.cpp

moc_serveurtcppull.cpp: Tcp_pull/demandetcppull.h \
		Http/client.h \
		Tcp_pull/serveurtcppull.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Tcp_pull/serveurtcppull.h -o moc_serveurtcppull.cpp

moc_clientTcpPush.cpp: Tcp_push/clientTcpPush.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Tcp_push/clientTcpPush.h -o moc_clientTcpPush.cpp

moc_serveurTcpPush.cpp: Tcp_push/clientTcpPush.h \
		Tcp_push/serveurTcpPush.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Tcp_push/serveurTcpPush.h -o moc_serveurTcpPush.cpp

moc_clientUdpPull.cpp: Udp_pull/clientUdpPull.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Udp_pull/clientUdpPull.h -o moc_clientUdpPull.cpp

moc_serveurUdpPull.cpp: Udp_pull/clientUdpPull.h \
		Udp_pull/serveurUdpPull.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Udp_pull/serveurUdpPull.h -o moc_serveurUdpPull.cpp

moc_clientUdpPush.cpp: Udp_push/clientUdpPush.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Udp_push/clientUdpPush.h -o moc_clientUdpPush.cpp

moc_serveurUdpPush.cpp: Udp_push/clientUdpPush.h \
		Udp_push/serveurUdpPush.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Udp_push/serveurUdpPush.h -o moc_serveurUdpPush.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp Http/serveur.h \
		Http/client.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

client.o: Http/client.cpp Http/client.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o client.o Http/client.cpp

serveur.o: Http/serveur.cpp Http/client.h \
		Http/serveur.h \
		Tcp_pull/serveurtcppull.h \
		Tcp_pull/demandetcppull.h \
		Tcp_push/serveurTcpPush.h \
		Tcp_push/clientTcpPush.h \
		Udp_pull/serveurUdpPull.h \
		Udp_pull/clientUdpPull.h \
		Udp_push/serveurUdpPush.h \
		Udp_push/clientUdpPush.h \
		Multi/serveurMulti.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serveur.o Http/serveur.cpp

serveurMulti.o: Multi/serveurMulti.cpp Multi/serveurMulti.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serveurMulti.o Multi/serveurMulti.cpp

demandetcppull.o: Tcp_pull/demandetcppull.cpp Tcp_pull/demandetcppull.h \
		Http/client.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o demandetcppull.o Tcp_pull/demandetcppull.cpp

serveurtcppull.o: Tcp_pull/serveurtcppull.cpp Tcp_pull/serveurtcppull.h \
		Tcp_pull/demandetcppull.h \
		Http/client.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serveurtcppull.o Tcp_pull/serveurtcppull.cpp

clientTcpPush.o: Tcp_push/clientTcpPush.cpp Tcp_push/clientTcpPush.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o clientTcpPush.o Tcp_push/clientTcpPush.cpp

serveurTcpPush.o: Tcp_push/serveurTcpPush.cpp Tcp_push/serveurTcpPush.h \
		Tcp_push/clientTcpPush.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serveurTcpPush.o Tcp_push/serveurTcpPush.cpp

clientUdpPull.o: Udp_pull/clientUdpPull.cpp Udp_pull/clientUdpPull.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o clientUdpPull.o Udp_pull/clientUdpPull.cpp

serveurUdpPull.o: Udp_pull/serveurUdpPull.cpp Udp_pull/serveurUdpPull.h \
		Udp_pull/clientUdpPull.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serveurUdpPull.o Udp_pull/serveurUdpPull.cpp

clientUdpPush.o: Udp_push/clientUdpPush.cpp Udp_push/clientUdpPush.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o clientUdpPush.o Udp_push/clientUdpPush.cpp

serveurUdpPush.o: Udp_push/serveurUdpPush.cpp Udp_push/serveurUdpPush.h \
		Udp_push/clientUdpPush.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serveurUdpPush.o Udp_push/serveurUdpPush.cpp

moc_client.o: moc_client.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_client.o moc_client.cpp

moc_serveur.o: moc_serveur.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_serveur.o moc_serveur.cpp

moc_serveurMulti.o: moc_serveurMulti.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_serveurMulti.o moc_serveurMulti.cpp

moc_demandetcppull.o: moc_demandetcppull.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_demandetcppull.o moc_demandetcppull.cpp

moc_serveurtcppull.o: moc_serveurtcppull.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_serveurtcppull.o moc_serveurtcppull.cpp

moc_clientTcpPush.o: moc_clientTcpPush.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_clientTcpPush.o moc_clientTcpPush.cpp

moc_serveurTcpPush.o: moc_serveurTcpPush.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_serveurTcpPush.o moc_serveurTcpPush.cpp

moc_clientUdpPull.o: moc_clientUdpPull.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_clientUdpPull.o moc_clientUdpPull.cpp

moc_serveurUdpPull.o: moc_serveurUdpPull.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_serveurUdpPull.o moc_serveurUdpPull.cpp

moc_clientUdpPush.o: moc_clientUdpPush.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_clientUdpPush.o moc_clientUdpPush.cpp

moc_serveurUdpPush.o: moc_serveurUdpPush.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_serveurUdpPush.o moc_serveurUdpPush.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

